
The following steps address how to update the base_data table in ls_base when the new lightstone records are ready to be imported.

Step 1: Obtain the new lighstone data
		
		FTP details:
		URL: ftp.lightstone.co.za
		Username: SEEFF
		Password: $SEEFF!1234#

		Download the RAR file and unzip (might need to enter a password)
		This file will likely be named "Seeff_Deeds_xxxx.bak"
		Restore the file to the Seeff_Deeds database and overwite
		The new data will be in the SEEFF_Deeds_Monthly table

		ENSURE THAT YOU HAVE THE MOST UP-TO-DATE VERSIONS OF THE SEEFF AND BOSS DATABASE BEFORE CONTINUING.

Step 1.1: Pre-Process:
		Run the following stored procedures on 41.22.226.215 - ls_base:
		execute dbo.sp_populate_area_layer_tbl; Run time +- 10 min
		execute [dbo].[sp_generate_area_parent_lookup_table]; Run time +- 15 Sec

Step 2: Obtain the live (production) version of LS_BASE (from Adam or whoever has access to it)
		
Step 2.1		Overwrite your local copy of ls_base with the production copy
				NB.: Ensure the schema of the new base_data table is the same as it is in the base_data_schema.sql file

Step 3: Preparation for the data take-on into ls_base

		Ensure the following tables are present in ls_base prior to beginning the take-on:
		[dbo].[agencies_user_suburbs] - do not modify this is user data
		[dbo].[agency] - when inserting/deleting remember there is FK relationship with [dbo].[agencies_user_suburbs]
		[dbo].[area_layer] - generated by the sp_populate_area_layer_tbl proc.
		[dbo].[base_data] -  target table to which new data will be added		
		[dbo].[province_id_lookup] - a table to lookup the seeff_area_id of a province based on the province name from the new lightstone data
		[dbo].[area_fating] - a reference table used by market share to determine stats on fated/unfated areas

		This table will be created and dropped by the take-on process - it is the main processing table:
		[dbo].[new_data_temp]

		Ensure the following stored procs and functions exist prior to take-on:
			SPs:
				[dbo].[find_area_id] - gets a seeff_area_id for a set of lat/long, area type and province_id
				[dbo].[sp_load_new_lightstone_data] - primary take-on proc (prepares data, loads data, and drops the temporary processing table)
				[dbo].[update_seeff_area_ids] - updates the seeff_area_id column of the temporary processing table
				[dbo].[populate_area_fating] - recalculates the area_fating table.
				[dbo].[sp_populate_area_layer_tbl] - truncates and repopulates the area_layer table.
				[dbo].[sp_generate_area_parent_lookup_table] - generates a table that stores the parent hierarchy of each area.
				[dbo].[validate_polygon_coords] - routine to validate a set of polygon coords
				[dbo].[sp_update_area_layer_tbl] - upsert to area_layer table
			
			Functions:
				[dbo].[point_inside_poly] - determine is a lat/long falls inside a particular polygon. NB.: this function will FAIL if the start and end coordinates of the polygon are different.
				[dbo].[get_province_id] - uses the lookup table [dbo].[province_id_lookup] to get the seeff_area_id for lighstone province
				[dbo].[sp_update_property_addresses] - wraps the call to CLR asm PropertyAddressUpdater
				[dbo].[ufn_get_area_parent_lookup_json] - uses the table generated by [dbo].[sp_generate_area_parent_lookup_table] to create json for the area hierarchy.

			CLR Assemblies:
				[PropertyAddressUpdater] - updates property addresses and street no's in the temporary processing table
				[SeeffGlobal] - others depend on this for data access

		Steps to follow for take-on:		
		a)		Deprecated -- Ensure that any updates to the code that updates property addresses are rebuilt into the CLR assembly(ies).
		b) Finally run [dbo].[sp_load_new_lightstone_data_step_1]
		c) Run GetPropertyAddress exe (C:\Users\Adam\Google Drive\Code2013\GetPropertyAddress)
		old c)		Deprecated -- Finally run [dbo].[sp_load_new_lightstone_data_step_2_1] (this could take some time) (Run with 2_2)
		d) sp_load_new_lightstone_data_step_3 (insert delta set into ls_base)
		old d)		Deprecated -- Finally run [dbo].[sp_load_new_lightstone_data_step_2_2] (this could take some time)
		e) Run KMLMapping step [5] Re-index all registrations (C:\Users\Adam\Google Drive\Code2013\KML Mapping)
		f) Finally run [dbo].[sp_load_new_lightstone_data_step_4] 
		   To ensure that this proc is doing its work query new_data_temp for new seeff_area_ids and/or property addresses not equal to null
		   If these values aren't being populated, stop the proc, drop new_temp_data and debug into it step-by-step.

Step 4: Backup ls_base (possibly zip too) and upload it into the Market Share remote web directory for Scott to deploy
		

		FTP details - http://marketshare.seeff.com/

		H: 41.222.226.215
		U: marketShareFtp
		P: Di$i$D@1

Additional notes to developers*:
* For dev purposes, if updates are made directly to the base_data table not via the front-end, be sure to run the populate_area_fating SP again.
  This SP calculates and stores the fatings by area. When updates are done normally via the front-end, this table is also updated.

Useful select statements to monitor the market share data take-on progress:

-- count up
select seeff_area_id, property_address from new_data_temp nolock
where seeff_area_id is not null and property_address is not null

-- count down
select count(*) from new_data_temp
where seeff_area_id is null and property_address is null


Query to pre-fate market share transactions:

update base_data
set fated = 1,  market_share_type = 'R'
where fated is null and seeff_area_id in (<list of area IDs>)